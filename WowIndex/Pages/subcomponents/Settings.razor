
<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
    <MudGrid>
        <MudItem xs="12" sm="12" md="12">
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudGrid>
                <MudItem xs="12">
                    <MudPaper Elevation="2" Class="pa-4" Style="height: 120px;">
                        <MudButton Variant="Variant.Filled" OnClick="ForceRefresh" Color="Color.Info" StartIcon="@Icons.Material.Filled.Refresh">Force refresh leaderboard</MudButton>
                        <MudText><br />Time until automatic refresh: @lastRefresh.Minutes minutes and @lastRefresh.Seconds seconds</MudText>
                    </MudPaper>
                </MudItem>
                <MudItem xs="12">
                    <MudPaper Elevation="2" Class="pa-4" Style="height: 200px;">
                        <MudButton Link="/admin/initialize/" Variant="Variant.Filled" Color="Color.Warning" >Initialize database</MudButton>
                    </MudPaper>
                </MudItem>
            </MudGrid>
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudPaper Elevation="2" Class="pa-4" Style="height: 100%">
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {        
    TimeSpan lastRefresh = new TimeSpan();

    protected override async Task OnInitializedAsync()
    {
        var result = await _context.RankedCastleNathriaLeaderboard.FirstOrDefaultAsync();
        if(result != null)
        {
            lastRefresh = result.ExpirationTime - DateTime.Now;
        }
    }

    private async Task ForceRefresh()
    {
        var RaidRanks = _context.RankedCastleNathriaLeaderboard.ToList();
        List<Models.RaidingLeaderboards.LeaderboardEntry> leaderboardEntries = new List<Models.RaidingLeaderboards.LeaderboardEntry>();

        _context.RankedCastleNathriaLeaderboard.RemoveRange(RaidRanks);
        await _context.SaveChangesAsync();

        // bind records from database

        var Leaderboard = await _context.KillTimeCastleNathria.ToListAsync();
        List<Models.RaidingLeaderboards.KillTimeCastleNathria> results = Helpers.RaidDataHelper.SortLeaderboard(Leaderboard);

        int i = 1;
        var Guilds = _context.Guilds.ToList();
        foreach (var item in results)
        {
            var guild = Guilds.Where(x => x.Id == item.GuildId).FirstOrDefault();
            int RealmRank = Helpers.CalculateRealmRankHelper.RealmRank(guild, Leaderboard, Guilds);
            DateTime killTime = new DateTime();
            DateTime[] bossTimes = Helpers.CastleNathriaKillTimeHelper.GetKillTimes(item);
            foreach (var time in bossTimes)
            {
                if (time != new DateTime())
                {
                    killTime = time;
                    break;
                }
            }

            Models.RaidingLeaderboards.LeaderboardEntry entry = new Models.RaidingLeaderboards.LeaderboardEntry
            {
                RankWorld = i,
                RankRealm = RealmRank,
                LatestProgressionTime = killTime,
                GuildName = guild.Name,
                Faction = guild.FactionName,
                Realm = guild.Realm,
                Region = guild.Region,
                Progression = item.Progress,
                GuildSlug = guild.NameSlug,
                RealmSlug = guild.RealmSlug
            };

            leaderboardEntries.Add(entry);
            _context.RankedCastleNathriaLeaderboard.Add(entry);
            i++;
        }
        await _context.SaveChangesAsync();
    }

}
