@page "/"

@if (GuildRankingsList != null)
{
<MudTable Items="@GuildRankingsList.entries" Hover="true" >
    <ToolBarContent>
        <MudText Typo="Typo.h6">Periodic Elements</MudText>
        <MudToolBarSpacer />
        @*<MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>*@
    </ToolBarContent>
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>Guild</MudTh>
        <MudTh>Region</MudTh>
        <MudTh>Realm</MudTh>
        <MudTh>Progress</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Rank">@context.rank</MudTd>
        <MudTd DataLabel="Guild">@context.guild.name</MudTd>
        <MudTd DataLabel="Region">@context.region</MudTd>
        <MudTd DataLabel="Realm">@context.guild.realm.name</MudTd>
        <MudTd DataLabel="Progress"></MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
}
@code {
    public LeaderboardEntries GuildRankingsList { get; set; }

    private string searchString = "";

    public HttpClient apiConnection()
    {
        var APIclient = new HttpClient();
        APIclient.BaseAddress = new Uri("https://us.api.blizzard.com/");

        return APIclient;
    }

    protected override async Task OnInitializedAsync()
    {
        var apiResponse = await apiConnection().GetAsync("data/wow/leaderboard/hall-of-fame/castle-nathria/horde?namespace=dynamic-us&locale=en_US&access_token=USOnT59Qy4a16BgShX3ktbzt0SeqzoljP2");

        if (apiResponse.IsSuccessStatusCode)
        {
            var result = apiResponse.Content.ReadAsStringAsync().Result;
            GuildRankingsList = JsonConvert.DeserializeObject<LeaderboardEntries>(result);

            StateHasChanged();
        }
    }

    /*
    private bool FilterFunc(GuildRanking element)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Sign.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Number} {element.Position} {element.Molar}".Contains(searchString))
            return true;
        return false;
    }
    */
}
