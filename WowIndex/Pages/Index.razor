@page "/"
@using WowIndex.Models.RaidingLeaderboards
@using Microsoft.Extensions.Configuration
@inject WowIndex.Data.ApplicationDbContext _context

<MudTable ServerData="@(new Func<TableState, Task<TableData<LeaderboardCastleNathria>>>(ServerReload))" RowsPerPage="20" Dense="true" FixedHeader="true" @ref="table" Hover="true">
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>Guild</MudTh>
        <MudTh>Realm</MudTh>
        <MudTh>Progress</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Rank">

        </MudTd>
        @{
            var guild = Guilds.Where(x => x.Id == context.GuildId).FirstOrDefault();
        }
        <MudTd DataLabel="Guild">
            @{ var link = $"/guild/{guild.Region}/{guild.RealmSlug}/{guild.NameSlug}/"; }
            <MudButton Link="@link" Color="Color.Info">
                @guild.Name
            </MudButton>
        </MudTd>
        <MudTd DataLabel="Guild">
            @guild.Realm
        </MudTd>
        <MudTd DataLabel="Guild">
            <MudChip Label="true" Size="Size.Small" Variant="Variant.Outlined">@context.Progress / 10</MudChip>
            <MudText Typo="Typo.caption">@context.Boss10KillTime</MudText>

        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager DisableRowsPerPage="true" />
    </PagerContent>
</MudTable>

@code {
    public MudTable<LeaderboardCastleNathria> table;

    public List<Models.Guild> Guilds = new List<Models.Guild>();

    private async Task<TableData<LeaderboardCastleNathria>> ServerReload(TableState state)
    {
        // bind records from database
        DateTime y = new DateTime();

        var leaderboard = await _context.LeaderboardCastleNathria.ToListAsync();


        var prog10 = new List<LeaderboardCastleNathria>();
        var prog9 = new List<LeaderboardCastleNathria>();
        var prog8 = new List<LeaderboardCastleNathria>();
        var prog7 = new List<LeaderboardCastleNathria>();
        var prog6 = new List<LeaderboardCastleNathria>();
        var prog5 = new List<LeaderboardCastleNathria>();
        var prog4 = new List<LeaderboardCastleNathria>();
        var prog3 = new List<LeaderboardCastleNathria>();
        var prog2 = new List<LeaderboardCastleNathria>();
        var prog1 = new List<LeaderboardCastleNathria>();
        foreach (var record in leaderboard)
        {
            if (record.Boss10KillTime != new DateTime())
            {
                prog10.Add(record);
            }
        }

        foreach (var item in leaderboard)
        {
            var guild = _context.Guilds.Where(x => x.Id == item.GuildId).FirstOrDefault();
            Guilds.Add(guild);
        }

        StateHasChanged();
        return new TableData<LeaderboardCastleNathria>() { Items = leaderboard };
    }
}
