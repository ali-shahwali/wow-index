@page "/Register"

<MudButton OnClick="AuthorizationRequest">1. Authorization Request</MudButton>
<MudButton OnClick="AccessTokenRequest">2. Access Token Request</MudButton>

<p>@AccessToken</p>
<hr />
<p>@userData</p>

@code {
    //public string ClientId = Guid.Parse(Configuration["APIUserId"]);
    //public string ClientId = Guid.Parse(Configuration["APIUserId"]);

    public string AccessToken { get; set; }

    public string userData { get; set; }

    // 1. Get code
    private async Task AuthorizationRequest()
    {
        // build request
        var client = new HttpClient();
        client.BaseAddress = new Uri("https://eu.battle.net/oauth/authorize");
        var responseType = "code";
        var clientId = "28750bf968ea4ae693014cdd27e5f912";
        var redirectURI = "https%3A%2F%2Flocalhost%3A44374%2FRegister";
        var scope = "wow.profile";

        // send request
        var auth = await client.GetAsync($"?response_type={responseType}&client_id={clientId}&redirect_uri={redirectURI}&scope={scope}");

        // navigate to ruturn url
        NavigationManager.NavigateTo(auth.RequestMessage.RequestUri.OriginalString);
    }

    // 2. Trade our code for an access token
    private async Task AccessTokenRequest()
    {
        // build request
        var client = new HttpClient();
        client.BaseAddress = new Uri("https://eu.battle.net/oauth/token");

        // Get code from return url (provided by blizzard)
        var grantType = "client_credentials";
        //var grantType = "authorization_code";
        var code = GetQueryParm("code", NavigationManager);
        var redirectURI = "https%3A%2F%2Flocalhost%3A44374%2FRegister";
        var clientId = "28750bf968ea4ae693014cdd27e5f912";
        var clientSecret = "jYawcRjFNgX42AMDK6RGivUVa9I9swiH";

        //client.DefaultRequestHeaders.Add("Content-Type", "multipart/form-data");
        client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Basic", Convert.ToBase64String(System.Text.ASCIIEncoding.ASCII.GetBytes($"{clientId}:{clientSecret}")));

        // Send request
        var request = await client.PostAsync($"?grant_type={grantType}&code={code}&redirect_uri={redirectURI}", null);

        var response = request.Content.ReadAsStringAsync().Result;

        // {"access_token":"EUbkChoUBbG8o4MtOg8FfDRcM5jQLaOuqk","token_type":"bearer","expires_in":86399}

        AccessToken = response.Split('"')[3];

        await GetUserInfo(AccessToken);

        StateHasChanged();
    }

    // 3. Get account information
    private async Task GetUserInfo(string accessToken)
    {
        // build request
        var client = new HttpClient();
        client.BaseAddress = new Uri("https://eu.battle.net/oauth/userinfo");
        client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);

        // send request
        var auth = await client.GetAsync($"");

        userData = auth.Content.ReadAsStringAsync().Result;
        StateHasChanged();
    }

    string GetQueryParm(string parmName, NavigationManager nav)
    {
        var uriBuilder = new UriBuilder(nav.Uri);
        var q = System.Web.HttpUtility.ParseQueryString(uriBuilder.Query);
        return q[parmName] ?? "";
    }
}
