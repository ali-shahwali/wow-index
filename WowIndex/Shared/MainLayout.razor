@inherits LayoutComponentBase

<MudThemeProvider Theme="darkTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudAppBarSpacer />
        @if (isLoggedIn)
        {

            if (!hasProfile)
            {
                <MudButton StartIcon="@Icons.Material.Filled.NotStarted" Link="/setupProfile" Color="Color.Success">Setup profile!</MudButton>

            }
            else
            {
                <MudButton StartIcon="@Icons.Material.Filled.NotStarted" Link="/profile" Color="Color.Success">Profile!</MudButton>

            }
            <MudMenu Class="ml-5" Direction="Direction.Right" OffsetY="true">
                <ActivatorContent>
                    <MudAvatar Color="Color.Transparent">
                        <MudIcon Icon="@Icons.Material.Filled.MoreVert" />
                    </MudAvatar>
                </ActivatorContent>
                <ChildContent>
                    <form method="post" action="Identity/Account/LogOut">
                        <button type="submit">
                            <MudMenuItem>
                                Logga ut
                            </MudMenuItem>
                        </button>
                    </form>
                </ChildContent>
            </MudMenu>

            <MudAvatar Class="ml-5" Image="@ProfilePic" />
        }
        else
        {
            <MudButton Class="mr-5" StartIcon="@Icons.Material.Filled.NotStarted" Link="/Identity/Account/Login" Color="Color.Success">Login</MudButton>
            <MudButton StartIcon="@Icons.Material.Filled.NotStarted" Link="/Identity/Account/Register" Color="Color.Success">Register</MudButton>
        }
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="2">
        <MudNavMenu Class="mud-width-full">
            <MudText Typo="Typo.h6" Class="px-4 mt-1" Style="color: #FF8000">wowindex.io</MudText>
            <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Warcraft data</MudText>
            <MudDivider Class="my-2" />
            <MudText Typo="Typo.subtitle2" Color="Color.Inherit" Class="ml-4 my-3">Leaderboards</MudText>
            <MudNavLink Href="/" Icon="@Icons.Filled.Dashboard">Raids</MudNavLink>
            <MudNavLink Href="/servers" Icon="@Icons.Filled.Storage">Mythic +</MudNavLink>
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {

    public string ProfilePic { get; set; }

    bool hasProfile = true;

    bool isLoggedIn = true;

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    MudTheme darkTheme = new MudTheme()
    {
        Palette = new Palette()
        {
            Black = "#27272f",
            Background = "#1F1F1F",
            BackgroundGrey = "#27272f",
            Surface = "#141414",
            DrawerBackground = "#1F1F1F",
            DrawerText = "rgba(255,255,255, 0.50)",
            DrawerIcon = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#0A0A0A",
            AppbarText = "rgba(255,255,255, 0.70)",
            TextPrimary = "rgba(255,255,255, 0.70)",
            TextSecondary = "rgba(255,255,255, 0.50)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)"
        }
    };

    [CascadingParameter]
    protected Task<AuthenticationState> AuthStat { get; set; }

    protected async override Task OnInitializedAsync()
    {
        base.OnInitialized();
        var user = (await AuthStat).User;

        if (!user.Identity.IsAuthenticated)
        {
            isLoggedIn = false;
        }

        var profile = await _context.Characters.Where(x => user.Identity.Name.Equals(x.Email)).FirstOrDefaultAsync();
        if(profile == null)
        {
            hasProfile = false;
        }
        else
        {
            ProfilePic = profile.render_url;
        }
    }

}
